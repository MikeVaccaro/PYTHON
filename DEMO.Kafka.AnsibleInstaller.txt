https://www.confluent.io/installer/environment

This simple wizard will help you launch a self-managed, multi-node deployment of Confluent Platform using Ansible. You'll need sudo access to 6 machines to get started. If you prefer a fully-managed solution, try Confluent Cloud.If you're new to Apache KafkaÂ® and want to learn the basics first, check out our tutorials.If you're ready for production, check out our full Ansible Playbooks or Confluent for Kubernetes.

You're going to install the following Confluent Platform services
A single-node ZooKeeper cluster on:
cflt1
A three-node Kafka cluster on:
cflt2
cflt3
cflt4
Schema Registry, ksqlDB, and Kafka Connect on:
cflt5
Control Center on:
cflt6


Copy the following into a file called ansible.cfg that can be saved in the current directory
[defaults]
hash_behaviour=merge



 Copy the following into a file called hosts.yml that can be saved in the current directory
all:
  vars:
    ansible_connection: ssh
    ansible_user: root
    ansible_become: true
    ansible_ssh_private_key_file: j
    ansible_ssh_common_args: -o StrictHostKeyChecking=no
zookeeper:
  hosts:
    cflt1:
kafka_broker:
  hosts:
    cflt2:
    cflt3:
    cflt4:
schema_registry:
  hosts:
    cflt5:
ksql:
  hosts:
    cflt5:
kafka_connect:
  hosts:
    cflt5:
      vars:
        kafka_connect_confluent_hub_plugins:
          - confluentinc/kafka-connect-datagen:0.4.0
control_center:
  hosts:
    cflt6:

4. Run the following command:
ansible-playbook -i hosts.yml confluent.platform.all




firewall configs below (I think I just disabled firewalld)
################################################################################
# Egress access for all 6 machines
################################################################################
Allow
port: any
protocol: any
to ip/ipBlock: 0.0.0.0/0
################################################################################
# SSH access for all 6 machines
################################################################################
Allow
port: 22
protocol: TCP
from ip/ipBlock: your workstation
################################################################################
# cflt1
################################################################################
# For Zookeeper
Allow
port: 2181
protocol: TCP
from ip/ipBlock: cflt2, cflt3, cflt4
################################################################################
# cflt2, cflt3, cflt4
################################################################################
# For inter broker communication
Allow
port: 9091
protocol: TCP
from ip/ipBlock: cflt2, cflt3, cflt4
# For Kafka AdminClient API, custom applications, etc
Allow
port: 9092
protocol: TCP
from ip/ipBlock: 0.0.0.0/0
// Alternatively for more restrictive use, only allow ingress from cflt5, cflt6, and your workstation
# OPTIONAL: For MDS & Embedded Kafka Rest
Allow
port: 8090
protocol: TCP
to ip/ipBlock: 0.0.0.0/0
// Alternatively for more restrictive use, only allow ingress from cflt6 and your workstation
# OPTIONAL: For Standalone REST Proxy
Allow
port: 8082
protocol: TCP
to ip/ipBlock: 0.0.0.0/0
// Alternatively for more restrictive use, only allow ingress from cflt6 and your workstation
################################################################################
# cflt5
################################################################################
# For Kafka Connect
Allow
port: 8083
protocol: TCP
from ip/ipBlock: 0.0.0.0/0
// Alternatively for more restrictive use, only allow ingress from cflt6 and your workstation
# For KSQL
Allow
port: 8088
protocol: TCP
from ip/ipBlock: 0.0.0.0/0
// Alternatively for more restrictive use, only allow ingress from cflt6 and your workstation
# For Schema Registry
Allow
port: 8081
protocol: TCP
from ip/ipBlock: 0.0.0.0/0
// Alternatively for more restrictive use, only allow ingress from cflt6 and your workstation
################################################################################
# cflt6
################################################################################
# For browser access to Confluent Control Center
Allow
port: 9021
protocol: TCP
from ip/ipBlock: 0.0.0.0/0
// Alternatively for more restrictive use, only allow ingress from your workstation
# For Metadata Service and Embedded Kafka REST
Allow
port: 8090
protocol: TCP
to ip/ipBlock: 0.0.0.0/0
// Alternatively for more restrictive use, only allow ingress from cflt6 and your workstation
